{"ast":null,"code":"var _jsxFileName = \"/home/gui/projetos/crud/frontend/src/pages/home/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { ContainerPage } from '../../components/main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = process.env.REACT_APP_API;\nexport const Myclients = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [cep, setCep] = useState(\"\");\n  const [nation, setNation] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n  const [id, setId] = useState(\"\");\n  const nameInput = useRef(null);\n  let [users, setUsers] = useState([]);\n\n  const deleteUser = async id => {\n    const userResponse = window.confirm(\"Are you sure you want to delete it?\");\n\n    if (userResponse) {\n      const res = await fetch(`${API}/users/${id}`, {\n        method: \"DELETE\"\n      });\n      const data = await res.json();\n      console.log(data);\n      await getUsers();\n    }\n  };\n\n  const editUser = async id => {\n    const res = await fetch(`${API}/users/${id}`);\n    const data = await res.json();\n    setEditing(true);\n    setId(id); // Reset\n\n    setName(data.name);\n    setEmail(data.email);\n    setPassword(data.password);\n    setContact(data.contact);\n    setCep(data.cep);\n    setNation(data.nation);\n    setState(data.state);\n    setCity(data.city);\n    setStreet(data.street);\n    setNumber(data.number);\n    nameInput.current.focus();\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ContainerPage, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Operations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-secondary btn-sm btn-block\",\n                onClick: e => editUser(user._id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger btn-sm btn-block\",\n                onClick: e => deleteUser(user._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Myclients, \"crTGxhN+NC8qdy/YqIBa8sm3yzo=\");\n\n_c = Myclients;\n\nvar _c;\n\n$RefreshReg$(_c, \"Myclients\");","map":{"version":3,"sources":["/home/gui/projetos/crud/frontend/src/pages/home/index.jsx"],"names":["React","ContainerPage","API","process","env","REACT_APP_API","Myclients","name","setName","useState","email","setEmail","password","setPassword","contact","setContact","cep","setCep","nation","setNation","state","setState","city","setCity","district","setDistrict","street","setStreet","number","setNumber","editing","setEditing","id","setId","nameInput","useRef","users","setUsers","deleteUser","userResponse","window","confirm","res","fetch","method","data","json","console","log","getUsers","editUser","current","focus","useEffect","map","user","e","_id"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport { ContainerPage } from '../../components/main'\n\nconst API = process.env.REACT_APP_API;\n\nexport const Myclients = () => {\n const [name, setName] = useState(\"\");\n const [email, setEmail] = useState(\"\");\n const [password, setPassword] = useState(\"\");\n const [contact, setContact] = useState(\"\");\n const [cep, setCep] = useState(\"\");\n const [nation, setNation] = useState(\"\");\n const [state, setState] = useState(\"\");\n const [city, setCity] = useState(\"\");\n const [district, setDistrict] = useState(\"\");\n const [street, setStreet] = useState(\"\");\n const [number, setNumber] = useState(\"\");\n\n const [editing, setEditing] = useState(false);\n const [id, setId] = useState(\"\");\n\n const nameInput = useRef(null);\n\n let [users, setUsers] = useState([]);\n\n const deleteUser = async (id) => {\n    const userResponse = window.confirm(\"Are you sure you want to delete it?\");\n    if (userResponse) {\n      const res = await fetch(`${API}/users/${id}`, {\n        method: \"DELETE\",\n      });\n      const data = await res.json();\n      console.log(data);\n      await getUsers();\n    }\n  };\n\n  const editUser = async (id) => {\n    const res = await fetch(`${API}/users/${id}`);\n    const data = await res.json();\n\n    setEditing(true);\n    setId(id);\n\n    // Reset\n    setName(data.name);\n    setEmail(data.email);\n    setPassword(data.password);\n    setContact(data.contact);\n    setCep(data.cep);\n    setNation(data.nation);\n    setState(data.state);\n    setCity(data.city);\n    setStreet(data.street);\n    setNumber(data.number);\n    nameInput.current.focus();\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n    return(\n        <ContainerPage>\n           \n      <div className=\"col-md-6\">\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Password</th>\n              <th>Operations</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user.name}</td>\n                <td>{user.email}</td>\n                <td>{user.password}</td>\n                <td>\n                  <button\n                    className=\"btn btn-secondary btn-sm btn-block\"\n                    onClick={(e) => editUser(user._id)}\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"btn btn-danger btn-sm btn-block\"\n                    onClick={(e) => deleteUser(user._id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </ContainerPage>\n  );\n};\n        \n"]},"metadata":{},"sourceType":"module"}