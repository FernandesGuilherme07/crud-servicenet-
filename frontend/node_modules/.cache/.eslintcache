[{"/home/gui/projetos/crud/frontend/src/index.js":"1","/home/gui/projetos/crud/frontend/src/reportWebVitals.js":"2","/home/gui/projetos/crud/frontend/src/App.js":"3","/home/gui/projetos/crud/frontend/src/routes.jsx":"4","/home/gui/projetos/crud/frontend/src/components/footer/index.jsx":"5","/home/gui/projetos/crud/frontend/src/components/header/index.jsx":"6","/home/gui/projetos/crud/frontend/src/pages/login/index.jsx":"7","/home/gui/projetos/crud/frontend/src/api.js":"8","/home/gui/projetos/crud/frontend/src/pages/createClients/index.jsx":"9","/home/gui/projetos/crud/frontend/src/components/footer/styled.jsx":"10","/home/gui/projetos/crud/frontend/src/pages/login/styled.jsx":"11","/home/gui/projetos/crud/frontend/src/components/styled.jsx":"12","/home/gui/projetos/crud/frontend/src/components/header/styled.jsx":"13","/home/gui/projetos/crud/frontend/src/firebase/firebaseConfig.js":"14","/home/gui/projetos/crud/frontend/src/components/main.jsx":"15","/home/gui/projetos/crud/frontend/src/pages/createClients/styled.jsx":"16"},{"size":312,"mtime":1624935559514,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1624675343857,"results":"19","hashOfConfig":"18"},{"size":726,"mtime":1624751476798,"results":"20","hashOfConfig":"18"},{"size":454,"mtime":1624929479423,"results":"21","hashOfConfig":"18"},{"size":249,"mtime":1624678570843,"results":"22","hashOfConfig":"18"},{"size":982,"mtime":1624778887857,"results":"23","hashOfConfig":"18"},{"size":3582,"mtime":1624698575296,"results":"24","hashOfConfig":"18"},{"size":531,"mtime":1624780506137,"results":"25","hashOfConfig":"18"},{"size":5614,"mtime":1624929448115,"results":"26","hashOfConfig":"18"},{"size":227,"mtime":1624678620462,"results":"27","hashOfConfig":"18"},{"size":1230,"mtime":1624693577878,"results":"28","hashOfConfig":"18"},{"size":624,"mtime":1624693608502,"results":"29","hashOfConfig":"18"},{"size":1060,"mtime":1624686923516,"results":"30","hashOfConfig":"18"},{"size":431,"mtime":1624773316246,"results":"31","hashOfConfig":"18"},{"size":162,"mtime":1624683722262,"results":"32","hashOfConfig":"18"},{"size":109,"mtime":1624859694550,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1suhgk4",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/gui/projetos/crud/frontend/src/index.js",[],"/home/gui/projetos/crud/frontend/src/reportWebVitals.js",[],["70","71"],"/home/gui/projetos/crud/frontend/src/App.js",[],"/home/gui/projetos/crud/frontend/src/routes.jsx",[],"/home/gui/projetos/crud/frontend/src/components/footer/index.jsx",[],"/home/gui/projetos/crud/frontend/src/components/header/index.jsx",[],"/home/gui/projetos/crud/frontend/src/pages/login/index.jsx",[],"/home/gui/projetos/crud/frontend/src/api.js",["72"],"import firebase from 'firebase'\nimport 'firebase/firebase-auth'\nimport 'firebase/firebase-firestore'\n\nimport firebaseConfig from './firebase/firebaseConfig'\n\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst db = firebaseApp.firestore()\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n\n    googlelogar: async () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        let result = await firebase.auth().signInWithPopup(provider);\n        return result;\n    }\n}","/home/gui/projetos/crud/frontend/src/pages/createClients/index.jsx",["73"],"import React, { useState, useRef } from \"react\";\n\nimport  { Cad } from './styled'\n\nconst API = process.env.REACT_APP_API;\n\n export const Users = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [cep, setCep] = useState(\"\");\n  const [nation, setNation] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n  const [street, setStreet] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const [editing, setEditing] = useState(false);\n  const [id, setId] = useState(\"\");\n\n  const nameInput = useRef(null);\n\n  let [Users, setUsers] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!editing) {\n      const res = await fetch(`${API}/users`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n          contact,\n          cep,\n          nation,\n          state,\n          city,\n          district,\n          street,\n          number,\n        }),\n      });\n      await res.json();\n    } else {\n      const res = await fetch(`${API}/users/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          password,\n          contact,\n          cep,\n          nation,\n          state,\n          city,\n          district,\n          street,\n          number,\n        }),\n      });\n      const data = await res.json();\n      console.log(data);\n      setEditing(false);\n      setId(\"\");\n    }\n    await getUsers();\n\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setContact(\"\");\n    setCep(\"\");\n    setNation(\"\");\n    setState(\"\");\n    setCity(\"\");\n    setDistrict(\"\");\n    setStreet(\"\");\n    setNumber(\"\");\n    nameInput.current.focus();\n  };\n\n  const getUsers = async () => {\n    const res = await fetch(`${API}/users`);\n    const data = await res.json();\n    setUsers(data);\n  };\n\n\n\n  return (\n    <Cad>\n      <div className=\"col-md-4\">\n        <form onSubmit={handleSubmit} className=\"card card-body\">\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              onChange={(e) => setName(e.target.value)}\n              value={name}\n              className=\"form-control\"\n              placeholder=\"Nome\"\n              ref={nameInput}\n              autoFocus\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              className=\"form-control\"\n              placeholder=\"Email\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n              value={password}\n              className=\"form-control\"\n              placeholder=\"senha\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"number\"\n              onChange={(e) => setContact(e.target.value)}\n              value={contact}\n              className=\"form-control\"\n              placeholder=\"contato\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              onChange={(e) => setCep(e.target.value)}\n              value={cep}\n              className=\"form-control\"\n              placeholder=\" cep\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              onChange={(e) => setNation(e.target.value)}\n              value={nation}\n              className=\"form-control\"\n              placeholder=\"PaÃ­s\"\n            />\n\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              onChange={(e) => setState(e.target.value)}\n              value={state}\n              className=\"form-control\"\n              placeholder=\"UF\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              onChange={(e) => setCity(e.target.value)}\n              value={city}\n              className=\"form-control\"\n              placeholder=\"cidade\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              onChange={(e) => setDistrict(e.target.value)}\n              value={district}\n              className=\"form-control\"\n              placeholder=\"Bairro\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              onChange={(e) => setCep(e.target.value)}\n              value={street}\n              className=\"form-control\"\n              placeholder=\"logradouro\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              onChange={(e) => setNumber(e.target.value)}\n              value={number}\n              className=\"form-control\"\n              placeholder=\"nÃºmero\"\n            />\n          </div> \n          <button className=\"btn btn-primary btn-block\">\n            {editing ? \"Update\" : \"Create\"}\n          </button>\n         </form>\n            </div>\n    </Cad>\n)\n\n}","/home/gui/projetos/crud/frontend/src/components/footer/styled.jsx",[],"/home/gui/projetos/crud/frontend/src/pages/login/styled.jsx",[],"/home/gui/projetos/crud/frontend/src/components/styled.jsx",[],"/home/gui/projetos/crud/frontend/src/components/header/styled.jsx",[],"/home/gui/projetos/crud/frontend/src/firebase/firebaseConfig.js",[],"/home/gui/projetos/crud/frontend/src/components/main.jsx",[],["74","75"],"/home/gui/projetos/crud/frontend/src/pages/createClients/styled.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":9,"column":7,"nodeType":"82","messageId":"83","endLine":9,"endColumn":9},{"ruleId":"80","severity":1,"message":"84","line":25,"column":8,"nodeType":"82","messageId":"83","endLine":25,"endColumn":13},{"ruleId":"76","replacedBy":"85"},{"ruleId":"78","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'db' is assigned a value but never used.","Identifier","unusedVar","'Users' is assigned a value but never used.",["87"],["88"],"no-global-assign","no-unsafe-negation"]